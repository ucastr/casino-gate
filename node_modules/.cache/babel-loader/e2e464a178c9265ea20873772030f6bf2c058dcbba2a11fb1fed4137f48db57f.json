{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers } from \"vue\";\nimport _imports_0 from '../assets/login-mini-logo.png';\nimport _imports_1 from '../assets/eye-icon.png';\nimport _imports_2 from '../assets/login-main-logo.svg';\nconst _hoisted_1 = {\n  class: \"login-bg\"\n};\nconst _hoisted_2 = {\n  class: \"login-title text-start\"\n};\nconst _hoisted_3 = {\n  class: \"login-description\"\n};\nconst _hoisted_4 = {\n  class: \"form-signin m-auto\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"login-title-inner\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"spacer\"\n}, \"|\"), /*#__PURE__*/_createTextVNode(\"Backoffice \")], -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"h5 mb-4 fw-normal\"\n}, \"SIGN IN\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"form text-start mb-4\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"floatingInput\",\n  class: \"loginLabel\"\n}, \"Username\", -1 /* HOISTED */);\nconst _hoisted_9 = [\"autocomplete\", \"placeholder\"];\nconst _hoisted_10 = {\n  class: \"form text-start mb-2\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"floatingPassword\",\n  class: \"loginLabel\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  key: 0,\n  src: _imports_1\n};\nconst _hoisted_13 = {\n  key: 1,\n  src: _imports_1\n};\nconst _hoisted_14 = [\"type\", \"autocomplete\", \"placeholder\"];\nconst _hoisted_15 = {\n  class: \"form-check text-start mb-5\"\n};\nconst _hoisted_16 = {\n  class: \"form-check-label loginLabel\",\n  for: \"flexCheckDefault\"\n};\nconst _hoisted_17 = {\n  class: \"btn btn-primary w-100 py-2\",\n  type: \"submit\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"login-logo text-start\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"login.title\")), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t(\"login.description\")), 1 /* TEXT */)]), _createElementVNode(\"main\", _hoisted_4, [_createElementVNode(\"form\", {\n    name: \"login-form\",\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_hoisted_5, _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control login\",\n    id: \"username\",\n    autocomplete: $data.autocompleteValue,\n    placeholder: _ctx.$t('login.usernamePlaceholder'),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.input.username = $event)\n  }, null, 8 /* PROPS */, _hoisted_9), [[_vModelText, $data.input.username]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"button\", {\n    class: \"eye-icon\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.togglePasswordVisibility && $options.togglePasswordVisibility(...args))\n  }, [$data.showPassword === false ? (_openBlock(), _createElementBlock(\"img\", _hoisted_12)) : (_openBlock(), _createElementBlock(\"img\", _hoisted_13))]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control login\",\n    id: \"password\",\n    type: $data.showPassword ? 'text' : 'password',\n    autocomplete: $data.autocompleteValue,\n    placeholder: _ctx.$t('login.passwordPlaceholder'),\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.input.password = $event)\n  }, null, 8 /* PROPS */, _hoisted_14), [[_vModelDynamic, $data.input.password]])]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    value: \"remember-me\",\n    id: \"flexCheckDefault\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.input.rememberMe = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.input.rememberMe]]), _createElementVNode(\"label\", _hoisted_16, _toDisplayString(_ctx.$t(\"login.rememberMe\")), 1 /* TEXT */)]), _createElementVNode(\"button\", _hoisted_17, _toDisplayString(_ctx.$t(\"login.buttonSignIn\")), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)]), _hoisted_18]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","src","_createTextVNode","for","key","type","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","$t","_hoisted_3","_hoisted_4","name","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","id","autocomplete","$data","autocompleteValue","placeholder","$event","input","username","_hoisted_9","_hoisted_10","_hoisted_11","onClick","togglePasswordVisibility","showPassword","_hoisted_12","_hoisted_13","password","_hoisted_14","_hoisted_15","value","rememberMe","_hoisted_16","_hoisted_17","_hoisted_18"],"sources":["/Users/brunocastro/CUSTOM/CLIENTES/casinoGate/casinogate_backoffice/src/components/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-bg\">\n    <div class=\"login-title text-start\">\n      <h1>{{ $t(\"login.title\") }}</h1>\n    </div>\n    <div class=\"login-description\">\n      <h2>{{ $t(\"login.description\") }}</h2>\n    </div>\n    <main class=\"form-signin m-auto\">\n      <form name=\"login-form\" @submit.prevent=\"login\">\n        <h1 class=\"login-title-inner\">\n          <img src=\"../assets/login-mini-logo.png\" /><span class=\"spacer\">|</span>Backoffice\n        </h1>\n        <h2 class=\"h5 mb-4 fw-normal\">SIGN IN</h2>\n\n        <div class=\"form text-start mb-4\">\n          <label for=\"floatingInput\" class=\"loginLabel\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control login\"\n            id=\"username\"\n            :autocomplete=\"autocompleteValue\"\n            :placeholder=\"$t('login.usernamePlaceholder')\"\n            v-model=\"input.username\"\n          />\n        </div>\n        <div class=\"form text-start mb-2\">\n          <label for=\"floatingPassword\" class=\"loginLabel\">Password</label>\n          <button class=\"eye-icon\" @click=\"togglePasswordVisibility\">\n            <img src=\"../assets/eye-icon.png\" v-if=\"showPassword === false\" />\n            <img src=\"../assets/eye-icon.png\" v-else />\n          </button>\n          <input\n            class=\"form-control login\"\n            id=\"password\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            :autocomplete=\"autocompleteValue\"\n            :placeholder=\"$t('login.passwordPlaceholder')\"\n            v-model=\"input.password\"\n          />\n        </div>\n\n        <div class=\"form-check text-start mb-5\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"remember-me\"\n            id=\"flexCheckDefault\"\n            v-model=\"input.rememberMe\"\n          />\n          <label class=\"form-check-label loginLabel\" for=\"flexCheckDefault\">\n            {{ $t(\"login.rememberMe\") }}\n          </label>\n        </div>\n        <button class=\"btn btn-primary w-100 py-2\" type=\"submit\">\n          {{ $t(\"login.buttonSignIn\") }}\n        </button>\n      </form>\n    </main>\n    <div class=\"login-logo text-start\">\n      <img src=\"../assets/login-main-logo.svg\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  SET_AUTHENTICATION,\n  SET_USERNAME,\n  SET_TOKEN,\n  GET_TOKEN,\n} from \"../store/storeconstants\";\n\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      input: {\n        username: \"\",\n        password: \"\",\n      },\n      autocompleteValue: \"off\",\n      rememberMe: false,\n      showPassword: false,\n      output: \"\",\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    checkRememberMe() {\n      const userData = localStorage.getItem(\"userData\");\n      if (userData) {\n        const { username, password, rememberMe } = JSON.parse(userData);\n        if (rememberMe) {\n          this.input.username = username;\n          this.input.password = password;\n          this.input.rememberMe = rememberMe;\n        }\n      }\n    },\n    async login() {\n      if (!this.input.username || !this.input.password) {\n        this.output = \"Username and password cannot be empty\";\n        return;\n      }\n\n      try {\n        let data = JSON.stringify({\n          username: this.input.username,\n          password: this.input.password,\n        });\n\n        let config = {\n          method: \"post\",\n          maxBodyLength: Infinity,\n          url: \"https://staging.casinogate.pt/backoffice/login\",\n          headers: {\n            Authorization:\n              \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n\n        this.$axios\n          .request(config)\n          .then((response) => {\n            console.log(JSON.stringify(response.data));\n            console.log(response.data.casinoId[0]);\n            //validar se o username será o casino id ou o user para entrar na app\n            this.$store.commit(`auth/${SET_AUTHENTICATION}`, true);\n            this.$store.commit(`auth/${SET_USERNAME}`, this.input.username);\n            this.$store.commit(`auth/${SET_TOKEN}`, response.data.token);\n\n            console.log(\"value of SET_AUTHENTICATION == \", SET_AUTHENTICATION);\n            console.log(\"value of SET_USERNAME == \", SET_USERNAME);\n            console.log(\"value of set token == \", SET_TOKEN);\n\n            const token = this.$store.getters[`auth/${GET_TOKEN}`];\n            console.log(\"Valor atual do token:\", token);\n            //GET THE ARRAY MENUS LIST\n\n            let data = JSON.stringify({\n              token: response.data.token,\n            });\n\n            let config = {\n              method: \"post\",\n              maxBodyLength: Infinity,\n              url: \"https://staging.casinogate.pt/backoffice/get_permissions\",\n              headers: {\n                Authorization:\n                  \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n              },\n              data: data,\n            };\n\n            this.$axios\n              .request(config)\n              .then((response) => {\n                console.log(JSON.stringify(response.data));\n                const permissions = response.data.permissions;\n                // Seu componente de login\n                this.$store.commit(\"permissions/SET_PERMISSIONS\", permissions);\n\n                console.log(permissions);\n                this.$router.push(\"/dashboard\");\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } catch (error) {\n        console.error(error);\n        this.output = \"An error occurred during login\";\n      }\n    },\n  },\n  mounted() {\n    this.checkRememberMe();\n  },\n};\n</script>\n\n<style>\n.error {\n  color: red;\n}\nbutton.eye-icon {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: absolute;\n  z-index: 1;\n  margin-top: 1.75em;\n  right: 3em;\n  outline: 0 !important;\n  border: 0 !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}