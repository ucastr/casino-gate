{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { SET_AUTHENTICATION, SET_USERNAME, SET_TOKEN } from \"../store/storeconstants\";\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      input: {\n        username: \"\",\n        password: \"\"\n      },\n      output: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      if (!this.input.username || !this.input.password) {\n        this.output = \"Username and password cannot be empty\";\n        return;\n      }\n      try {\n        let data = JSON.stringify({\n          username: \"bruno.castro\",\n          password: \"pass12345\"\n          //username: this.input.username,\n          //password: this.input.password,\n        });\n        this.$store.commit(`./auth/${SET_AUTHENTICATION}`, true);\n        this.$store.commit(`./auth/${SET_USERNAME}`, this.input.username);\n        let config = {\n          method: \"post\",\n          maxBodyLength: Infinity,\n          url: \"https://staging.casinogate.pt/backoffice/login\",\n          headers: {\n            Authorization: \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\"\n          },\n          data: data\n        };\n        this.$axios.request(config).then(response => {\n          console.log(JSON.stringify(response.data));\n          console.log(response.data.casinoId[0]);\n          //validar se o username será o casino id ou o user para entrar na app\n\n          this.$store.commit(`./auth/${SET_TOKEN}`, response.data.token);\n\n          //GET THE ARRAY MENUS LIST\n\n          let data = JSON.stringify({\n            token: response.data.token\n          });\n          let config = {\n            method: \"post\",\n            maxBodyLength: Infinity,\n            url: \"https://staging.casinogate.pt/backoffice/get_permissions\",\n            headers: {\n              Authorization: \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Content-Type\": \"application/json\"\n            },\n            data: data\n          };\n          this.$axios.request(config).then(response => {\n            console.log(JSON.stringify(response.data));\n            this.$router.push(\"/dashboard\");\n          }).catch(error => {\n            console.log(error);\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } catch (error) {\n        console.error(error);\n        this.output = \"An error occurred during login\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["SET_AUTHENTICATION","SET_USERNAME","SET_TOKEN","name","data","input","username","password","output","methods","login","JSON","stringify","$store","commit","config","method","maxBodyLength","Infinity","url","headers","Authorization","$axios","request","then","response","console","log","casinoId","token","$router","push","catch","error"],"sources":["/Users/brunocastro/CUSTOM/CLIENTES/casinoGate/casinogate_backoffice/src/components/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-bg\">\n    <div class=\"login-title text-start\">\n      <h1>{{ $t(\"login.title\") }}</h1>\n    </div>\n    <div class=\"login-description\">\n      <h2>{{ $t(\"login.description\") }}</h2>\n    </div>\n\n    <main class=\"form-signin m-auto\">\n      <form name=\"login-form\" @submit.prevent=\"login\">\n        <h1 class=\"h3 mb-3 fw-normal\">Casinogate | Backoffice</h1>\n        <h2 class=\"h5 mb-5 fw-normal\">SIGN IN</h2>\n\n        <div class=\"form text-start mb-4\">\n          <label for=\"floatingInput\" class=\"loginLabel\">Username</label>\n          <input\n            type=\"email\"\n            class=\"form-control login\"\n            id=\"username\"\n            :placeholder=\"$t('login.usernamePlaceholder')\"\n            v-model=\"input.username\"\n          />\n        </div>\n        <div class=\"form text-start mb-2\">\n          <label for=\"floatingPassword\" class=\"loginLabel\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control login\"\n            id=\"password\"\n            :placeholder=\"$t('login.passwordPlaceholder')\"\n            v-model=\"input.password\"\n          />\n        </div>\n\n        <div class=\"form-check text-start mb-4\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"remember-me\"\n            id=\"flexCheckDefault\"\n          />\n          <label class=\"form-check-label loginLabel\" for=\"flexCheckDefault\">\n            {{ $t(\"login.rememberMe\") }}\n          </label>\n        </div>\n        <button class=\"btn btn-primary w-100 py-2\" type=\"submit\">\n          {{ $t(\"login.buttonSignIn\") }}\n        </button>\n      </form>\n    </main>\n  </div>\n</template>\n\n<script>\nimport {\n  SET_AUTHENTICATION,\n  SET_USERNAME,\n  SET_TOKEN,\n} from \"../store/storeconstants\";\n\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      input: {\n        username: \"\",\n        password: \"\",\n      },\n      output: \"\",\n    };\n  },\n  methods: {\n    async login() {\n      if (!this.input.username || !this.input.password) {\n        this.output = \"Username and password cannot be empty\";\n        return;\n      }\n\n      try {\n        let data = JSON.stringify({\n          username: \"bruno.castro\",\n          password: \"pass12345\",\n          //username: this.input.username,\n          //password: this.input.password,\n        });\n        this.$store.commit(`./auth/${SET_AUTHENTICATION}`, true);\n        this.$store.commit(`./auth/${SET_USERNAME}`, this.input.username);        \n        let config = {\n          method: \"post\",\n          maxBodyLength: Infinity,\n          url: \"https://staging.casinogate.pt/backoffice/login\",\n          headers: {\n            Authorization:\n              \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n\n        this.$axios\n          .request(config)\n          .then((response) => {\n            console.log(JSON.stringify(response.data));\n            console.log(response.data.casinoId[0]);\n            //validar se o username será o casino id ou o user para entrar na app\n            \n            this.$store.commit(`./auth/${SET_TOKEN}`, response.data.token);\n\n            //GET THE ARRAY MENUS LIST\n\n            let data = JSON.stringify({\n              token: response.data.token,\n            });\n\n            let config = {\n              method: \"post\",\n              maxBodyLength: Infinity,\n              url: \"https://staging.casinogate.pt/backoffice/get_permissions\",\n              headers: {\n                Authorization:\n                  \"Basic Q0FTSU5PR0FURTo2dCUkcSQ5cTRleng3JmcocHNvM3BxeiYkemFqMXEkdjZsPQ==\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n              },\n              data: data,\n            };\n\n            this.$axios\n              .request(config)\n              .then((response) => {\n                console.log(JSON.stringify(response.data));\n                this.$router.push(\"/dashboard\");\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } catch (error) {\n        console.error(error);\n        this.output = \"An error occurred during login\";\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.error {\n  color: red;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}