{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport { IS_USER_AUTHENTICATED } from \"../store/storeconstants\";\nimport store from \"../store\";\nconst routes = [{\n  path: \"/\",\n  name: \"login\",\n  component: () => import(\"../components/LoginView.vue\")\n}, {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  component: () => import(\"../components/DashboardView.vue\"),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/marketplace\",\n  name: \"Marketplace\",\n  component: () => import(\"../components/MarketplaceView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/tournaments\",\n  name: \"Tournaments\",\n  component: () => import(\"../components/TournamentsView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/gamemanager\",\n  name: \"GameManager\",\n  component: () => import(\"../components/GamemanagerView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/configuration\",\n  name: \"Configuration\",\n  component: () => import(\"../components/ConfigurationView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes,\n  linkActiveClass: \"active\"\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = store.getters[`auth/${IS_USER_AUTHENTICATED}`];\n  console.log(\"isAuthenticated == \", isAuthenticated);\n  // Verificar se a rota requer autenticação\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Se a rota requer autenticação e o utilizador não estiver autenticado, redirecione para a página de login\n    if (!isAuthenticated) {\n      next({\n        path: \"/\",\n        query: {\n          redirect: to.fullPath\n        } // Salve o caminho para redirecionar de volta após o login\n      });\n    } else {\n      // Se o utilizador estiver autenticado, prossiga para a próxima rota\n      next();\n    }\n  } else {\n    // Se a rota não requer autenticação, prossiga para a próxima rota\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","IS_USER_AUTHENTICATED","store","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","linkActiveClass","beforeEach","to","from","next","isAuthenticated","getters","console","log","matched","some","record","query","redirect","fullPath"],"sources":["/Users/brunocastro/CUSTOM/CLIENTES/casinoGate/casinogate_backoffice/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\nimport { IS_USER_AUTHENTICATED } from \"../store/storeconstants\";\nimport store from \"../store\";\n\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"login\",\n    component: () => import(\"../components/LoginView.vue\"),\n  },\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: () => import(\"../components/DashboardView.vue\"),\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/marketplace\",\n    name: \"Marketplace\",\n    component: () => import(\"../components/MarketplaceView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/tournaments\",\n    name: \"Tournaments\",\n    component: () => import(\"../components/TournamentsView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/gamemanager\",\n    name: \"GameManager\",\n    component: () => import(\"../components/GamemanagerView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/configuration\",\n    name: \"Configuration\",\n    component: () => import(\"../components/ConfigurationView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes,\n  linkActiveClass: \"active\",\n});\n\nrouter.beforeEach((to, from, next) => {\n\n  const isAuthenticated = store.getters[`auth/${IS_USER_AUTHENTICATED}`];\n\n  console.log(\"isAuthenticated == \", isAuthenticated);\n  // Verificar se a rota requer autenticação\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    // Se a rota requer autenticação e o utilizador não estiver autenticado, redirecione para a página de login\n    if (!isAuthenticated) {\n      next({\n        path: \"/\",\n        query: { redirect: to.fullPath }, // Salve o caminho para redirecionar de volta após o login\n      });\n    } else {\n      // Se o utilizador estiver autenticado, prossiga para a próxima rota\n      next();\n    }\n  } else {\n    // Se a rota não requer autenticação, prossiga para a próxima rota\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,YAAY;AAC3D,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAOC,KAAK,MAAM,UAAU;AAG5B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B;AACvD,CAAC,EACD;EACEF,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC;EAC1DC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qCAAqC,CAAC;EAC9D;EACAC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGT,YAAY,CAAC;EAC1BU,OAAO,EAAEX,gBAAgB,CAACY,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV,MAAM,EAAEA,MAAM;EACdW,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFL,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAEpC,MAAMC,eAAe,GAAGjB,KAAK,CAACkB,OAAO,CAAE,QAAOnB,qBAAsB,EAAC,CAAC;EAEtEoB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,eAAe,CAAC;EACnD;EACA,IAAIH,EAAE,CAACO,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAAClB,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD;IACA,IAAI,CAACW,eAAe,EAAE;MACpBD,IAAI,CAAC;QACHd,IAAI,EAAE,GAAG;QACTsB,KAAK,EAAE;UAAEC,QAAQ,EAAEX,EAAE,CAACY;QAAS,CAAC,CAAE;MACpC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAV,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}