{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport store from \"../store\"; // Importe o store diretamente\n\nconst ifAuthenticated = (to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters[\"auth/IS_USER_AUTHENTICATED\"]) {\n      //next(\"/\");\n    } else {\n      next(\"/dashboard\");\n    }\n  } else {\n    //next();\n  }\n};\nconst routes = [{\n  path: \"/\",\n  name: \"login\",\n  component: () => import(\"../components/LoginView.vue\"),\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  component: () => import(\"../components/DashboardView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/marketplace\",\n  name: \"Marketplace\",\n  component: () => import(\"../components/MarketplaceView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/tournaments\",\n  name: \"Tournaments\",\n  component: () => import(\"../components/TournamentsView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/gamemanager\",\n  name: \"GameManager\",\n  component: () => import(\"../components/GamemanagerView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/configuration\",\n  name: \"Configuration\",\n  component: () => import(\"../components/ConfigurationView.vue\"),\n  //beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes,\n  linkActiveClass: \"active\"\n});\nrouter.beforeEach((to, from, next) => {\n  // Verifique se a rota requer autenticação e se o usuário está autenticado\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters[\"auth/IS_USER_AUTHENTICATED\"]) {\n      // Se não estiver autenticado, redirecione para o login\n      next(\"/\");\n    } else {\n      // Se estiver autenticado, permita a navegação\n      next();\n    }\n  } else {\n    // Para rotas que não requerem autenticação, permita a navegação\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","store","ifAuthenticated","to","from","next","matched","some","record","meta","requiresAuth","getters","routes","path","name","component","router","history","process","env","BASE_URL","linkActiveClass","beforeEach"],"sources":["/Users/brunocastro/CUSTOM/CLIENTES/casinoGate/casinogate_backoffice/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\nimport store from \"../store\"; // Importe o store diretamente\n\nconst ifAuthenticated = (to, from, next) => {\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    if (!store.getters[\"auth/IS_USER_AUTHENTICATED\"]) {\n      //next(\"/\");\n    } else {\n      next(\"/dashboard\");\n    }\n  } else {\n    //next();\n  }\n};\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"login\",\n    component: () => import(\"../components/LoginView.vue\"),\n    meta: { requiresAuth: false },\n  },\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: () => import(\"../components/DashboardView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/marketplace\",\n    name: \"Marketplace\",\n    component: () => import(\"../components/MarketplaceView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/tournaments\",\n    name: \"Tournaments\",\n    component: () => import(\"../components/TournamentsView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/gamemanager\",\n    name: \"GameManager\",\n    component: () => import(\"../components/GamemanagerView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/configuration\",\n    name: \"Configuration\",\n    component: () => import(\"../components/ConfigurationView.vue\"),\n    //beforeEnter: ifAuthenticated,\n    meta: { requiresAuth: true },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes,\n  linkActiveClass: \"active\",\n});\n\nrouter.beforeEach((to, from, next) => {\n  // Verifique se a rota requer autenticação e se o usuário está autenticado\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    if (!store.getters[\"auth/IS_USER_AUTHENTICATED\"]) {\n      // Se não estiver autenticado, redirecione para o login\n      next(\"/\");\n    } else {\n      // Se estiver autenticado, permita a navegação\n      next();\n    }\n  } else {\n    // Para rotas que não requerem autenticação, permita a navegação\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,UAAU,CAAC,CAAC;;AAE9B,MAAMC,eAAe,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD,IAAI,CAACT,KAAK,CAACU,OAAO,CAAC,4BAA4B,CAAC,EAAE;MAChD;IAAA,CACD,MAAM;MACLN,IAAI,CAAC,YAAY,CAAC;IACpB;EACF,CAAC,MAAM;IACL;EAAA;AAEJ,CAAC;AAED,MAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC;EACtDN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEG,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC;EAC1D;EACAN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEG,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEG,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEG,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5D;EACAN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEG,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qCAAqC,CAAC;EAC9D;EACAN,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMM,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAElB,gBAAgB,CAACmB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR,MAAM,EAAEA,MAAM;EACdS,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFL,MAAM,CAACM,UAAU,CAAC,CAACnB,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD,IAAI,CAACT,KAAK,CAACU,OAAO,CAAC,4BAA4B,CAAC,EAAE;MAChD;MACAN,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACL;MACAA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeW,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}